package nl.spijkerman.ivo.euler;

import org.jetbrains.annotations.NotNull;

import java.util.ArrayList;
import java.util.List;

public class Problem2 implements Problem {

    @NotNull
    @Override
    public Long run() {

        List<Integer> fibonacci = new ArrayList<>();
        fibonacci.add(1);
        fibonacci.add(1);

        int max = 4_000_000;
        int index = 2;
        long sum = 0;
        int value;

        // Fill with correct values
        do {
            value = fibonacci.get(index - 1) + fibonacci.get(index++ - 2);
            fibonacci.add(value);
            if (value < max && value % 2 == 0)
                sum += value;
        } while (value < max);

        return sum;
    }

    @NotNull
    @Override
    public String description() {
        return "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\n" +
                "\n" +
                "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n" +
                "\n" +
                "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n";
    }
}
